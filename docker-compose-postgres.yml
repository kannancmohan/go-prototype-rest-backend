version: '3.8'

services:
  db:
    image: postgres:17.2
    container_name: postgres-db
    environment:
      POSTGRES_DB: socialnetwork
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
    networks:
      - backend 
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  # memcached:
  #   image: memcached:1.6.19-alpine3.17
  #   ports:
  #     - "11211:11211"
    # healthcheck:
    #   test: ["CMD-SHELL", "nc -z localhost 11211 || exit 1"]
    #   interval: 20s
    #   timeout: 1s
    #   retries: 5
  redis:
    image: redis:7.0.9-alpine3.17
    ports:
      - "6379:6379"
    # healthcheck:
    #   test: ["CMD-SHELL", "redis-cli ping || exit 1"]
    #   interval: 20s
    #   timeout: 1s
    #   retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://${KAFKA_HOST:-192.168.0.30}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  kafka-ui: # Optional - create a Kafka UI to view topics
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  elasticsearch:
    image: elasticsearch:8.16.2
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    # healthcheck:
    #   test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
    #   interval: 20s
    #   timeout: 1s
    #   retries: 5
volumes:
  db-data:

networks:
  backend:
    driver: bridge